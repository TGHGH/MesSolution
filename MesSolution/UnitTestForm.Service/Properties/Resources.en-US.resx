<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String_FrmGoodNGService_MoDontHaveRoute" xml:space="preserve">
    <value>MoDontHaveRoute</value>
    <comment>工单没有途程</comment>
  </data>
  <data name="String_FrmGoodNGService_CheckSuccess" xml:space="preserve">
    <value>CheckSuccess</value>
    <comment>检测成功</comment>
  </data>
  <data name="String_FrmGoodNGService_CollectSuccess" xml:space="preserve">
    <value>CollectSuccess</value>
    <comment>采集成功</comment>
  </data>
  <data name="String_FrmGoodNGService_LotNotOp" xml:space="preserve">
    <value>LotNotOp</value>
    <comment>该产品没有维护产生送检批工序</comment>
  </data>
  <data name="String_FrmGoodNGService_MoCanNotNull" xml:space="preserve">
    <value>MoCanNotNull</value>
    <comment>工单号不能为空</comment>
  </data>
  <data name="String_FrmGoodNGService_MoEnough" xml:space="preserve">
    <value>MoEnough</value>
    <comment>工单已满</comment>
  </data>
  <data name="String_FrmGoodNGService_MoNotExit" xml:space="preserve">
    <value>MoNotExit</value>
    <comment>工单不存在</comment>
  </data>
  <data name="String_FrmGoodNGService_MoStatusError" xml:space="preserve">
    <value>MoStatusError</value>
    <comment>工单状态错误</comment>
  </data>
  <data name="String_FrmGoodNGService_NextOp" xml:space="preserve">
    <value>NextOp</value>
    <comment>产品下道工序为</comment>
  </data>
  <data name="String_FrmGoodNGService_NowOp" xml:space="preserve">
    <value>NowOp</value>
    <comment>当前工序为</comment>
  </data>
  <data name="String_FrmGoodNGService_ResNotFirst" xml:space="preserve">
    <value>ResNotFirst</value>
    <comment>该资源不属于该工单的第一道工序</comment>
  </data>
  <data name="String_FrmGoodNGService_ResNotOp" xml:space="preserve">
    <value>ResNotOp</value>
    <comment>该资源岗位没有归属工序</comment>
  </data>
  <data name="String_FrmGoodNGService_SnHadFinish" xml:space="preserve">
    <value>SnHadFinish</value>
    <comment>产品已完工</comment>
  </data>
  <data name="String_FrmGoodNGService_SnHadInMo" xml:space="preserve">
    <value>SnHadInMo</value>
    <comment>已属于该工单</comment>
  </data>
  <data name="String_FrmGoodNGService_SnHadNotInMo" xml:space="preserve">
    <value>SnHadNotInMo</value>
    <comment>没有归属工单</comment>
  </data>
  <data name="String_FrmGoodNGService_SnIsRunning" xml:space="preserve">
    <value>SnIsRunning</value>
    <comment>此为在制品，不能归属工单</comment>
  </data>
  <data name="FrmLogin_Login_PasswordError" xml:space="preserve">
    <value>Password Error</value>
    <comment>密码错误</comment>
  </data>
  <data name="FrmLogin_Login_UserNotRes" xml:space="preserve">
    <value>User don't have the res</value>
    <comment>用户没有该资源的权限</comment>
  </data>
  <data name="FrmLogin_Login_LoginSuccess" xml:space="preserve">
    <value>LoginSuccess</value>
    <comment>登录成功</comment>
  </data>
  <data name="FrmLogin_Login_UserNotExist" xml:space="preserve">
    <value>User is not Exist</value>
    <comment>用户不存在</comment>
  </data>
</root>